---

- name: Add backports repository
  apt_repository:
    repo: "{{ item.repo }}"
    state: present
    filename: "{{ item.filename }}"
  with_items:
    - {repo: "deb http://ftp.debian.org/debian stretch-backports main", filename: backports}

- name: Requirements
  apt:
    pkg: fuse
    state: present

- name: Add backports repository
  apt_repository:
    repo: "{{ item.repo }}"
    state: present
    filename: "{{ item.filename }}"
  with_items:
    - {repo: "deb http://ftp.debian.org/debian stretch-backports main", filename: backports}
  when: borg_use_backports | bool

- name: Install borg backup from backports
  apt:
    pkg: borgbackup
    state: present
    default_release: 'stretch-backports'
  when: borg_use_backports | bool

- name: Install borg backup
  apt:
    pkg: borgbackup
    state: present
  when: not borg_use_backports | bool

- name: Backup group
  group:
    name: backup
    state: present

- name: Backup user
  user:
    name: backup
    group: backup
    state: present
    shell: /bin/bash
    createhome: yes
    home: "{{ borg_home }}"

- name: Directory permission
  file:
    path: "{{ item }}"
    mode: 0700
    owner: backup
    group: backup
    state: directory
  with_items:
    - "{{ borg_home }}"
    - "{{ borg_home }}/.ssh"
    - "{{ borg_home }}/repos"

- name: Borg users
  authorized_key:
    user: backup
    key: "{{ item.1 }}"
    key_options: 'command="cd {{ borg_home }}/repos/{{ item.0.name }};borg serve --restrict-to-path {{ borg_home }}/repos/{{ item.0.name }}",restrict'
  with_subelements:
    - "{{ borg_users }}"
    - keys

- name: Borg users directory
  file:
    path: "{{ borg_home }}/repos/{{ item.name }}"
    owner: backup
    group: backup
    mode: 0700
    state: directory
  with_items: "{{ borg_users }}"
  loop_control:
    label: "{{ item.name }}"
